// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: ticket.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for purchasing a ticket.
type PurchaseTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromLocation  string                 `protobuf:"bytes,1,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"` // e.g., "London"
	ToLocation    string                 `protobuf:"bytes,2,opt,name=to_location,json=toLocation,proto3" json:"to_location,omitempty"`       // e.g., "France"
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                     // Reference to the User message
	PricePaid     float64                `protobuf:"fixed64,4,opt,name=price_paid,json=pricePaid,proto3" json:"price_paid,omitempty"`        // Price in USD, e.g., 20.00
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseTicketRequest) Reset() {
	*x = PurchaseTicketRequest{}
	mi := &file_ticket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseTicketRequest) ProtoMessage() {}

func (x *PurchaseTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseTicketRequest.ProtoReflect.Descriptor instead.
func (*PurchaseTicketRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseTicketRequest) GetFromLocation() string {
	if x != nil {
		return x.FromLocation
	}
	return ""
}

func (x *PurchaseTicketRequest) GetToLocation() string {
	if x != nil {
		return x.ToLocation
	}
	return ""
}

func (x *PurchaseTicketRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PurchaseTicketRequest) GetPricePaid() float64 {
	if x != nil {
		return x.PricePaid
	}
	return 0
}

// Response message for purchasing a ticket.
type PurchaseTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates if the purchase was successful
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // A descriptive message (e.g., error details)
	Receipt       *Receipt               `protobuf:"bytes,3,opt,name=receipt,proto3" json:"receipt,omitempty"`  // The generated receipt if successful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseTicketResponse) Reset() {
	*x = PurchaseTicketResponse{}
	mi := &file_ticket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseTicketResponse) ProtoMessage() {}

func (x *PurchaseTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseTicketResponse.ProtoReflect.Descriptor instead.
func (*PurchaseTicketResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *PurchaseTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PurchaseTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PurchaseTicketResponse) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

// Request message for getting receipt details.
type GetReceiptDetailsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetReceiptDetailsRequest_Email
	//	*GetReceiptDetailsRequest_TicketId
	Identifier    isGetReceiptDetailsRequest_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptDetailsRequest) Reset() {
	*x = GetReceiptDetailsRequest{}
	mi := &file_ticket_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptDetailsRequest) ProtoMessage() {}

func (x *GetReceiptDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetReceiptDetailsRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *GetReceiptDetailsRequest) GetIdentifier() isGetReceiptDetailsRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetReceiptDetailsRequest) GetEmail() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetReceiptDetailsRequest_Email); ok {
			return x.Email
		}
	}
	return ""
}

func (x *GetReceiptDetailsRequest) GetTicketId() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetReceiptDetailsRequest_TicketId); ok {
			return x.TicketId
		}
	}
	return ""
}

type isGetReceiptDetailsRequest_Identifier interface {
	isGetReceiptDetailsRequest_Identifier()
}

type GetReceiptDetailsRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"` // User's email
}

type GetReceiptDetailsRequest_TicketId struct {
	TicketId string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3,oneof"` // Specific ticket ID
}

func (*GetReceiptDetailsRequest_Email) isGetReceiptDetailsRequest_Identifier() {}

func (*GetReceiptDetailsRequest_TicketId) isGetReceiptDetailsRequest_Identifier() {}

// Response message for getting receipt details.
type GetReceiptDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Receipt       *Receipt               `protobuf:"bytes,3,opt,name=receipt,proto3" json:"receipt,omitempty"` // The requested receipt
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptDetailsResponse) Reset() {
	*x = GetReceiptDetailsResponse{}
	mi := &file_ticket_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptDetailsResponse) ProtoMessage() {}

func (x *GetReceiptDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetReceiptDetailsResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *GetReceiptDetailsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetReceiptDetailsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetReceiptDetailsResponse) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

// Represents a user and their allocated seat.
type UserSeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Reference to the User message
	Seat          *Seat                  `protobuf:"bytes,2,opt,name=seat,proto3" json:"seat,omitempty"` // Reference to the Seat message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSeat) Reset() {
	*x = UserSeat{}
	mi := &file_ticket_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSeat) ProtoMessage() {}

func (x *UserSeat) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSeat.ProtoReflect.Descriptor instead.
func (*UserSeat) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *UserSeat) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserSeat) GetSeat() *Seat {
	if x != nil {
		return x.Seat
	}
	return nil
}

// Request message for getting users by section.
type GetUsersBySectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Section       Seat_Section           `protobuf:"varint,1,opt,name=section,proto3,enum=trainticketing.entities.Seat_Section" json:"section,omitempty"` // The section to query (A or B)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersBySectionRequest) Reset() {
	*x = GetUsersBySectionRequest{}
	mi := &file_ticket_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersBySectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersBySectionRequest) ProtoMessage() {}

func (x *GetUsersBySectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersBySectionRequest.ProtoReflect.Descriptor instead.
func (*GetUsersBySectionRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *GetUsersBySectionRequest) GetSection() Seat_Section {
	if x != nil {
		return x.Section
	}
	return Seat_SECTION_UNKNOWN
}

// Response message for getting users by section.
type GetUsersBySectionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UsersInSection []*UserSeat            `protobuf:"bytes,3,rep,name=users_in_section,json=usersInSection,proto3" json:"users_in_section,omitempty"` // List of users and their seats
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUsersBySectionResponse) Reset() {
	*x = GetUsersBySectionResponse{}
	mi := &file_ticket_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersBySectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersBySectionResponse) ProtoMessage() {}

func (x *GetUsersBySectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersBySectionResponse.ProtoReflect.Descriptor instead.
func (*GetUsersBySectionResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *GetUsersBySectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUsersBySectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUsersBySectionResponse) GetUsersInSection() []*UserSeat {
	if x != nil {
		return x.UsersInSection
	}
	return nil
}

// Request message for removing a user.
type RemoveUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*RemoveUserRequest_Email
	//	*RemoveUserRequest_TicketId
	Identifier    isRemoveUserRequest_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveUserRequest) Reset() {
	*x = RemoveUserRequest{}
	mi := &file_ticket_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserRequest) ProtoMessage() {}

func (x *RemoveUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveUserRequest) GetIdentifier() isRemoveUserRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *RemoveUserRequest) GetEmail() string {
	if x != nil {
		if x, ok := x.Identifier.(*RemoveUserRequest_Email); ok {
			return x.Email
		}
	}
	return ""
}

func (x *RemoveUserRequest) GetTicketId() string {
	if x != nil {
		if x, ok := x.Identifier.(*RemoveUserRequest_TicketId); ok {
			return x.TicketId
		}
	}
	return ""
}

type isRemoveUserRequest_Identifier interface {
	isRemoveUserRequest_Identifier()
}

type RemoveUserRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"` // User's email
}

type RemoveUserRequest_TicketId struct {
	TicketId string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3,oneof"` // Specific ticket ID
}

func (*RemoveUserRequest_Email) isRemoveUserRequest_Identifier() {}

func (*RemoveUserRequest_TicketId) isRemoveUserRequest_Identifier() {}

// Response message for removing a user.
type RemoveUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveUserResponse) Reset() {
	*x = RemoveUserResponse{}
	mi := &file_ticket_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserResponse) ProtoMessage() {}

func (x *RemoveUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request message for modifying a user's seat.
type ModifyUserSeatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*ModifyUserSeatRequest_Email
	//	*ModifyUserSeatRequest_TicketId
	Identifier    isModifyUserSeatRequest_Identifier `protobuf_oneof:"identifier"`
	NewSeat       *Seat                              `protobuf:"bytes,3,opt,name=new_seat,json=newSeat,proto3" json:"new_seat,omitempty"` // The new seat to allocate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyUserSeatRequest) Reset() {
	*x = ModifyUserSeatRequest{}
	mi := &file_ticket_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyUserSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserSeatRequest) ProtoMessage() {}

func (x *ModifyUserSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserSeatRequest.ProtoReflect.Descriptor instead.
func (*ModifyUserSeatRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyUserSeatRequest) GetIdentifier() isModifyUserSeatRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ModifyUserSeatRequest) GetEmail() string {
	if x != nil {
		if x, ok := x.Identifier.(*ModifyUserSeatRequest_Email); ok {
			return x.Email
		}
	}
	return ""
}

func (x *ModifyUserSeatRequest) GetTicketId() string {
	if x != nil {
		if x, ok := x.Identifier.(*ModifyUserSeatRequest_TicketId); ok {
			return x.TicketId
		}
	}
	return ""
}

func (x *ModifyUserSeatRequest) GetNewSeat() *Seat {
	if x != nil {
		return x.NewSeat
	}
	return nil
}

type isModifyUserSeatRequest_Identifier interface {
	isModifyUserSeatRequest_Identifier()
}

type ModifyUserSeatRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"` // User's email
}

type ModifyUserSeatRequest_TicketId struct {
	TicketId string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3,oneof"` // Specific ticket ID
}

func (*ModifyUserSeatRequest_Email) isModifyUserSeatRequest_Identifier() {}

func (*ModifyUserSeatRequest_TicketId) isModifyUserSeatRequest_Identifier() {}

// Response message for modifying a user's seat.
type ModifyUserSeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedSeat   *Seat                  `protobuf:"bytes,3,opt,name=updated_seat,json=updatedSeat,proto3" json:"updated_seat,omitempty"` // The newly allocated seat if successful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyUserSeatResponse) Reset() {
	*x = ModifyUserSeatResponse{}
	mi := &file_ticket_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyUserSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserSeatResponse) ProtoMessage() {}

func (x *ModifyUserSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserSeatResponse.ProtoReflect.Descriptor instead.
func (*ModifyUserSeatResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyUserSeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ModifyUserSeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ModifyUserSeatResponse) GetUpdatedSeat() *Seat {
	if x != nil {
		return x.UpdatedSeat
	}
	return nil
}

var File_ticket_proto protoreflect.FileDescriptor

const file_ticket_proto_rawDesc = "" +
	"\n" +
	"\fticket.proto\x12\x16trainticketing.service\x1a\n" +
	"user.proto\x1a\n" +
	"seat.proto\x1a\rreceipt.proto\"\xaf\x01\n" +
	"\x15PurchaseTicketRequest\x12#\n" +
	"\rfrom_location\x18\x01 \x01(\tR\ffromLocation\x12\x1f\n" +
	"\vto_location\x18\x02 \x01(\tR\n" +
	"toLocation\x121\n" +
	"\x04user\x18\x03 \x01(\v2\x1d.trainticketing.entities.UserR\x04user\x12\x1d\n" +
	"\n" +
	"price_paid\x18\x04 \x01(\x01R\tpricePaid\"\x88\x01\n" +
	"\x16PurchaseTicketResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12:\n" +
	"\areceipt\x18\x03 \x01(\v2 .trainticketing.entities.ReceiptR\areceipt\"_\n" +
	"\x18GetReceiptDetailsRequest\x12\x16\n" +
	"\x05email\x18\x01 \x01(\tH\x00R\x05email\x12\x1d\n" +
	"\tticket_id\x18\x02 \x01(\tH\x00R\bticketIdB\f\n" +
	"\n" +
	"identifier\"\x8b\x01\n" +
	"\x19GetReceiptDetailsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12:\n" +
	"\areceipt\x18\x03 \x01(\v2 .trainticketing.entities.ReceiptR\areceipt\"p\n" +
	"\bUserSeat\x121\n" +
	"\x04user\x18\x01 \x01(\v2\x1d.trainticketing.entities.UserR\x04user\x121\n" +
	"\x04seat\x18\x02 \x01(\v2\x1d.trainticketing.entities.SeatR\x04seat\"[\n" +
	"\x18GetUsersBySectionRequest\x12?\n" +
	"\asection\x18\x01 \x01(\x0e2%.trainticketing.entities.Seat.SectionR\asection\"\x9b\x01\n" +
	"\x19GetUsersBySectionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12J\n" +
	"\x10users_in_section\x18\x03 \x03(\v2 .trainticketing.service.UserSeatR\x0eusersInSection\"X\n" +
	"\x11RemoveUserRequest\x12\x16\n" +
	"\x05email\x18\x01 \x01(\tH\x00R\x05email\x12\x1d\n" +
	"\tticket_id\x18\x02 \x01(\tH\x00R\bticketIdB\f\n" +
	"\n" +
	"identifier\"H\n" +
	"\x12RemoveUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x96\x01\n" +
	"\x15ModifyUserSeatRequest\x12\x16\n" +
	"\x05email\x18\x01 \x01(\tH\x00R\x05email\x12\x1d\n" +
	"\tticket_id\x18\x02 \x01(\tH\x00R\bticketId\x128\n" +
	"\bnew_seat\x18\x03 \x01(\v2\x1d.trainticketing.entities.SeatR\anewSeatB\f\n" +
	"\n" +
	"identifier\"\x8e\x01\n" +
	"\x16ModifyUserSeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\fupdated_seat\x18\x03 \x01(\v2\x1d.trainticketing.entities.SeatR\vupdatedSeat2\xd2\x04\n" +
	"\x15TrainTicketingService\x12o\n" +
	"\x0ePurchaseTicket\x12-.trainticketing.service.PurchaseTicketRequest\x1a..trainticketing.service.PurchaseTicketResponse\x12x\n" +
	"\x11GetReceiptDetails\x120.trainticketing.service.GetReceiptDetailsRequest\x1a1.trainticketing.service.GetReceiptDetailsResponse\x12x\n" +
	"\x11GetUsersBySection\x120.trainticketing.service.GetUsersBySectionRequest\x1a1.trainticketing.service.GetUsersBySectionResponse\x12c\n" +
	"\n" +
	"RemoveUser\x12).trainticketing.service.RemoveUserRequest\x1a*.trainticketing.service.RemoveUserResponse\x12o\n" +
	"\x0eModifyUserSeat\x12-.trainticketing.service.ModifyUserSeatRequest\x1a..trainticketing.service.ModifyUserSeatResponseB/Z-github.com/talk2sohail/train-ticket-api/protob\x06proto3"

var (
	file_ticket_proto_rawDescOnce sync.Once
	file_ticket_proto_rawDescData []byte
)

func file_ticket_proto_rawDescGZIP() []byte {
	file_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ticket_proto_rawDesc), len(file_ticket_proto_rawDesc)))
	})
	return file_ticket_proto_rawDescData
}

var file_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_ticket_proto_goTypes = []any{
	(*PurchaseTicketRequest)(nil),     // 0: trainticketing.service.PurchaseTicketRequest
	(*PurchaseTicketResponse)(nil),    // 1: trainticketing.service.PurchaseTicketResponse
	(*GetReceiptDetailsRequest)(nil),  // 2: trainticketing.service.GetReceiptDetailsRequest
	(*GetReceiptDetailsResponse)(nil), // 3: trainticketing.service.GetReceiptDetailsResponse
	(*UserSeat)(nil),                  // 4: trainticketing.service.UserSeat
	(*GetUsersBySectionRequest)(nil),  // 5: trainticketing.service.GetUsersBySectionRequest
	(*GetUsersBySectionResponse)(nil), // 6: trainticketing.service.GetUsersBySectionResponse
	(*RemoveUserRequest)(nil),         // 7: trainticketing.service.RemoveUserRequest
	(*RemoveUserResponse)(nil),        // 8: trainticketing.service.RemoveUserResponse
	(*ModifyUserSeatRequest)(nil),     // 9: trainticketing.service.ModifyUserSeatRequest
	(*ModifyUserSeatResponse)(nil),    // 10: trainticketing.service.ModifyUserSeatResponse
	(*User)(nil),                      // 11: trainticketing.entities.User
	(*Receipt)(nil),                   // 12: trainticketing.entities.Receipt
	(*Seat)(nil),                      // 13: trainticketing.entities.Seat
	(Seat_Section)(0),                 // 14: trainticketing.entities.Seat.Section
}
var file_ticket_proto_depIdxs = []int32{
	11, // 0: trainticketing.service.PurchaseTicketRequest.user:type_name -> trainticketing.entities.User
	12, // 1: trainticketing.service.PurchaseTicketResponse.receipt:type_name -> trainticketing.entities.Receipt
	12, // 2: trainticketing.service.GetReceiptDetailsResponse.receipt:type_name -> trainticketing.entities.Receipt
	11, // 3: trainticketing.service.UserSeat.user:type_name -> trainticketing.entities.User
	13, // 4: trainticketing.service.UserSeat.seat:type_name -> trainticketing.entities.Seat
	14, // 5: trainticketing.service.GetUsersBySectionRequest.section:type_name -> trainticketing.entities.Seat.Section
	4,  // 6: trainticketing.service.GetUsersBySectionResponse.users_in_section:type_name -> trainticketing.service.UserSeat
	13, // 7: trainticketing.service.ModifyUserSeatRequest.new_seat:type_name -> trainticketing.entities.Seat
	13, // 8: trainticketing.service.ModifyUserSeatResponse.updated_seat:type_name -> trainticketing.entities.Seat
	0,  // 9: trainticketing.service.TrainTicketingService.PurchaseTicket:input_type -> trainticketing.service.PurchaseTicketRequest
	2,  // 10: trainticketing.service.TrainTicketingService.GetReceiptDetails:input_type -> trainticketing.service.GetReceiptDetailsRequest
	5,  // 11: trainticketing.service.TrainTicketingService.GetUsersBySection:input_type -> trainticketing.service.GetUsersBySectionRequest
	7,  // 12: trainticketing.service.TrainTicketingService.RemoveUser:input_type -> trainticketing.service.RemoveUserRequest
	9,  // 13: trainticketing.service.TrainTicketingService.ModifyUserSeat:input_type -> trainticketing.service.ModifyUserSeatRequest
	1,  // 14: trainticketing.service.TrainTicketingService.PurchaseTicket:output_type -> trainticketing.service.PurchaseTicketResponse
	3,  // 15: trainticketing.service.TrainTicketingService.GetReceiptDetails:output_type -> trainticketing.service.GetReceiptDetailsResponse
	6,  // 16: trainticketing.service.TrainTicketingService.GetUsersBySection:output_type -> trainticketing.service.GetUsersBySectionResponse
	8,  // 17: trainticketing.service.TrainTicketingService.RemoveUser:output_type -> trainticketing.service.RemoveUserResponse
	10, // 18: trainticketing.service.TrainTicketingService.ModifyUserSeat:output_type -> trainticketing.service.ModifyUserSeatResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ticket_proto_init() }
func file_ticket_proto_init() {
	if File_ticket_proto != nil {
		return
	}
	file_user_proto_init()
	file_seat_proto_init()
	file_receipt_proto_init()
	file_ticket_proto_msgTypes[2].OneofWrappers = []any{
		(*GetReceiptDetailsRequest_Email)(nil),
		(*GetReceiptDetailsRequest_TicketId)(nil),
	}
	file_ticket_proto_msgTypes[7].OneofWrappers = []any{
		(*RemoveUserRequest_Email)(nil),
		(*RemoveUserRequest_TicketId)(nil),
	}
	file_ticket_proto_msgTypes[9].OneofWrappers = []any{
		(*ModifyUserSeatRequest_Email)(nil),
		(*ModifyUserSeatRequest_TicketId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ticket_proto_rawDesc), len(file_ticket_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_proto_depIdxs,
		MessageInfos:      file_ticket_proto_msgTypes,
	}.Build()
	File_ticket_proto = out.File
	file_ticket_proto_goTypes = nil
	file_ticket_proto_depIdxs = nil
}
